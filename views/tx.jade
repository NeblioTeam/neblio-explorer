extends layout

block content
  - var time = format_unixtime(tx.timestamp)
  .col-xs-12.col-md-10.col-md-offset-1
    .well.well-sm.hidden-lg.hidden-md(style='word-wrap:break-word;')
      | #{tx.txid}
    .panel.panel-default
      .panel-heading.hidden-xs
        strong #{settings.symbol} txid: #{tx.txid}
        a(href='/api/getrawtransaction?txid=#{tx.txid}&decrypt=1')
          span.glyphicon.glyphicon-info-sign.iquidus.pull-right
      table.table.table-bordered.table-striped.summary-table
        thead
          tr
            th #{settings.locale.confirmations}
            th.hidden-xs #{settings.locale.tx_block_hash}
            th.hidden-xs Block Vote
            th #{settings.locale.timestamp}
            th
        tbody
          - var confirms = (blockcount - tx.blockindex);
          if confirms >= confirmations
            tr.success
                td #{confirms}
                td.hidden-xs
                  a(href='/block/#{tx.blockhash}') #{tx.blockhash}
                td.hidden-xs(style='text-align:center')
                  if tx.has_block_vote
                    a(href='/block/#{tx.blockhash}')
                      span.fa.fa-check-double
                td #{time}
                td.view_tx
                  a(href='/block/#{tx.blockhash}')
                    span.glyphicon.glyphicon-eye-open
          else
            if confirms < (confirmations / 2)
              tr.danger
                td #{confirms}
                td.hidden-xs
                  a(href='/block/#{tx.blockhash}') #{tx.blockhash}
                td.hidden-xs(style='text-align:center')
                  if tx.has_block_vote
                    a(href='/block/#{tx.blockhash}')
                      span.fa.fa-check-double
                td #{time}
                td.view_tx
                  a(href='/block/#{tx.blockhash}')
                    span.glyphicon.glyphicon-eye-open
            else
              tr.warning
                td #{confirms}
                td.hidden-xs
                  a(href='/block/#{tx.blockhash}') #{tx.blockhash}
                td.hidden-xs(style='text-align:center')
                  if tx.has_block_vote
                    a(href='/block/#{tx.blockhash}')
                      span.fa.fa-check-double
                td #{time}
                td.view_tx
                  a(href='/block/#{tx.blockhash}')
                    span.glyphicon.glyphicon-eye-open
    if tx.vout.length < 1
      .alert.alert-info(role='alert', style='text-align:center;')
        strong #{settings.locale.tx_nonstandard}
    else
      .row
        .col-md-6
          .panel.panel-default
            .panel-heading
              strong #{settings.locale.tx_contributors}
              span.glyphicon.glyphicon-arrow-right.pull-right.hidden-xs
            table.table.table-bordered.table-striped.summary-table
              thead
                tr
                  th #{settings.locale.tx_address}
                  if (tx.vin.length > 0)
                    if tx.vin[0].addresses != 'coinbase'
                      th.hidden-sm #{settings.locale.mkt_amount}
              tbody
                if tx.vin.length > 0
                  each r in tx.vin
                    if r.addresses == 'coinbase'
                      tr.info(style='text-align:center')
                        td #{settings.locale.new_coins}
                    else
                      - var ramount = r.amount / 100000000
                      tr
                        td
                          a.loading(href='/address/#{r.addresses}')
                            =r.addresses
                        if (tx.has_token && r.tokens)
                          - var sorted_tokens = sort_tokens(r.tokens)
                        td.danger.hidden-sm #{ramount.toFixed(8)} #{settings.symbol}
                          if (tx.is_cold_stake)
                            br
                            <span class='far fa-snowflake'></span> Cold Staking Delegation <span class='far fa-snowflake'></span>
                          if (tx.has_token && r.tokens)
                            br
                            each t in sorted_tokens
                              | #{t.amount} #[a(href='/token/#{t.id}') #{display_token_name(t)}] #[img.image(src='#{display_token_icon(t)}' height="20px")]
                              br
                      tr.hidden-lg.hidden-md
                          td.danger #{ramount.toFixed(8)} #{settings.symbol}
                            if (tx.is_cold_stake)
                              br
                              <span class='far fa-snowflake'></span> Cold Staking Delegation <span class='far fa-snowflake'></span>
                            if (tx.has_token && r.tokens)
                              br
                              each t in sorted_tokens
                                | #{t.amount} #[a(href='/token/#{t.id}') #{display_token_name(t)}] #[img.image(src='#{display_token_icon(t)}' height="20px")]
                                br
                else
                  if (tx.is_cold_stake)
                    tr.primary(style='text-align:center;background-color:rgba(60, 161, 207, 0.5)')
                      td
                        <span class='far fa-snowflake'></span> Cold Stake Reward <span class='far fa-snowflake'></span>
                  else
                    tr.info(style='text-align:center')
                      td #{settings.locale.proof_of_stake}
        .col-md-6
          .panel.panel-default
            .panel-heading
              strong #{settings.locale.tx_recipients}
            table.table.table-bordered.table-striped.summary-table
              thead
                tr
                  th #{settings.locale.tx_address}
                  th.hidden-sm #{settings.locale.mkt_amount}
              tbody
                each r in tx.vout
                  if tx.vout.length > 0
                    - var ramount = r.amount / 100000000
                    tr
                      td
                        a.loading(href='/address/#{r.addresses}')
                          =r.addresses
                      if (tx.has_token && r.tokens)
                        - var sorted_tokens = sort_tokens(r.tokens)
                      td.success.hidden-sm  #{ramount.toFixed(8)} #{settings.symbol}
                        if (tx.has_token && r.tokens)
                            br
                            each t in sorted_tokens
                              | #{t.amount} #[a(href='/token/#{t.id}') #{display_token_name(t)}] #[img.image(src='#{display_token_icon(t)}' height="20px")]
                              br
                    tr.hidden-lg.hidden-md
                      td.success #{ramount.toFixed(8)} #{settings.symbol}
                        if (tx.has_token && r.tokens)
                          br
                          each t in sorted_tokens
                            | #{t.amount} #[a(href='/token/#{t.id}') #{display_token_name(t)}] #[img.image(src='#{display_token_icon(t)}' height="20px")]
                            br
                  else
                    tr
                      td
                        a.loading(href='/address/#{r.addresses}')
                          =r.addresses
                      td.success.hidden-sm  #{ramount.toFixed(8)}
                    tr.hidden-lg.hidden-md
                      td.success #{ramount.toFixed(8)} #{settings.symbol}
    .panel.panel-default
      .panel-heading.hidden-xs
        strong NTP1 Transaction Metadata
        - var has_meta = false
      each r in tx.vout
        if (tx.has_token && r.tokens)
          - var sorted_tokens = sort_tokens(r.tokens)
          each t in sorted_tokens
            if (t.meta_of_utxo && t.meta_of_utxo.userData && t.meta_of_utxo.userData.meta)
              table.table.table-bordered.table-striped.summary-table
                thead
                  tr
                    th Key
                    th.hidden-xs Value
                tbody
                  if t.meta_of_utxo.userData.meta.length > 0
                    each m in t.meta_of_utxo.userData.meta
                      - has_meta = true
                      - for(var prop in m)
                        tr
                          td(style='word-break:normal;') #{prop}
                          td(style='word-break:break-word;') #{m[prop]}
            if (t.meta_of_utxo && t.meta_of_utxo.SourcePubKeyHex && t.meta_of_utxo.TargetPubKeyHex && t.meta_of_utxo.Cipher64)
              - has_meta = true
              table.table.table-bordered.table-striped.summary-table
                thead
                  tr
                    th NTP1 Encrypted Metadata Found
        if (has_meta)
          - break
      if (!has_meta)
        table.table.table-bordered.table-striped.summary-table
          thead
            tr
              th None
    .footer-padding
